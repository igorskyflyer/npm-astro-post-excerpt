---
import PostExcerpt from '@igor.dvlpr/astro-post-excerpt'
import { getCollection } from 'astro:content'

const postsV1 = await Astro.glob('../content/blog/*.{md,mdx}')
const postsAfterV2 = await getCollection('blog')
const postsCount = postsAfterV2.length
---

<!doctype html>
<html>
  <head>
    <meta charset="UTF-8" />
    <link
      rel="preconnect"
      href="https://fonts.googleapis.com"
    />
    <link
      rel="preconnect"
      href="https://fonts.gstatic.com"
      crossorigin
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,400;1,300&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="test/ui.css"
      type="text/css"
    />
    <script define:vars={{ postsCount }}>
      window.runAstroTest = () => runTest(postsCount)
    </script>
  </head>
  <body>
    <main>
      <div
        id="posts-v1"
        class="component-container">
        <h2>V1</h2>&nbsp;&nbsp;<em>(legacy)</em>
        {
          postsV1.map((post) => (
            <p class="post">
              <PostExcerpt
                post={post}
                words={25}
                smartEllipsis={true}
                addEllipsis={true}
              />
            </p>
          ))
        }
      </div>
      <div
        id="posts-after-v2"
        class="component-container">
        <h2>V2 &amp; V3 &amp; V4</h2>&nbsp;&nbsp;<em>(current)</em>
        {
          postsAfterV2.map((post) => (
            <p class="post">
              <PostExcerpt
                post={post}
                words={25}
                smartEllipsis={true}
                addEllipsis={true}
              />
            </p>
          ))
        }
      </div>

      <div id="test-container">
        <p id="test-info">
          This test suite ensures compatibility between major versions of Astro.
          It does so by comparing the content rendered by this component. Tests
          are artificially slowed down for demonstration purposes.
        </p>

        <section id="test-buttons">
          <button
            id="btn-test"
            onclick="runAstroTest();"
            title="Run component tests"
            >Run tests</button
          >
          <button
            id="btn-test-reload"
            class="util-hide util-fake-disabled"
            onclick="location.reload();"
            title="Reload page"
            >üîÑÔ∏è</button
          >
        </section>
        <section id="test-result">
          <progress
            id="test-progress"
            class="util-hide"
            value="0"
            max="100"
          ></progress>

          <p class="util-hide">‚úÖ Query posts V1</p>
          <p class="util-hide">‚úÖ Query posts V2+</p>
          <p class="util-hide">‚úÖ Query posts count V1</p>
          <p class="util-hide">‚úÖ Query posts count V2+</p>
          <p class="util-hide">‚úÖ Matching posts count</p>
          <p
            id="test-posts"
            class="util-hide">
            ‚úÖ Posts: 0/0 content checked
          </p>

          <p
            id="test-error"
            class="util-hide">
          </p>
        </section>
      </div>
    </main>
    <script
      src="/test/suite-runner.js"
      type="text/javascript"
    ></script>
  </body>
</html>
